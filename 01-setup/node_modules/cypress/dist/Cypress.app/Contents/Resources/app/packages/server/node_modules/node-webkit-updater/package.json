{
  "_args": [
    [
      {
        "raw": "node-webkit-updater@github:cypress-io/node-webkit-updater#e74623726f381487f543e373e71515177a32daeb",
        "scope": null,
        "escapedName": "node-webkit-updater",
        "name": "node-webkit-updater",
        "rawSpec": "github:cypress-io/node-webkit-updater#e74623726f381487f543e373e71515177a32daeb",
        "spec": "github:cypress-io/node-webkit-updater#e74623726f381487f543e373e71515177a32daeb",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:cypress-io/node-webkit-updater.git#e74623726f381487f543e373e71515177a32daeb",
          "sshUrl": "git+ssh://git@github.com/cypress-io/node-webkit-updater.git#e74623726f381487f543e373e71515177a32daeb",
          "httpsUrl": "git+https://github.com/cypress-io/node-webkit-updater.git#e74623726f381487f543e373e71515177a32daeb",
          "gitUrl": "git://github.com/cypress-io/node-webkit-updater.git#e74623726f381487f543e373e71515177a32daeb",
          "shortcut": "github:cypress-io/node-webkit-updater#e74623726f381487f543e373e71515177a32daeb",
          "directUrl": "https://raw.githubusercontent.com/cypress-io/node-webkit-updater/e74623726f381487f543e373e71515177a32daeb/package.json"
        }
      },
      "/usr/local/var/buildkite-agent/builds/1973.local-1/cypress-io/cypress/dist/darwin/packages/server"
    ]
  ],
  "_from": "cypress-io/node-webkit-updater#e74623726f381487f543e373e71515177a32daeb",
  "_id": "node-webkit-updater@0.3.2",
  "_inCache": true,
  "_location": "/node-webkit-updater",
  "_phantomChildren": {
    "aws-sign2": "0.5.0",
    "bl": "1.0.3",
    "caseless": "0.11.0",
    "combined-stream": "1.0.5",
    "extend": "3.0.1",
    "forever-agent": "0.6.1",
    "form-data": "1.0.1",
    "har-validator": "1.8.0",
    "hawk": "3.1.3",
    "http-signature": "0.11.0",
    "isstream": "0.1.2",
    "json-stringify-safe": "5.0.1",
    "node-uuid": "1.4.1",
    "oauth-sign": "0.8.2",
    "stringstream": "0.0.5",
    "tough-cookie": "2.3.0",
    "tunnel-agent": "0.4.3"
  },
  "_requested": {
    "raw": "node-webkit-updater@github:cypress-io/node-webkit-updater#e74623726f381487f543e373e71515177a32daeb",
    "scope": null,
    "escapedName": "node-webkit-updater",
    "name": "node-webkit-updater",
    "rawSpec": "github:cypress-io/node-webkit-updater#e74623726f381487f543e373e71515177a32daeb",
    "spec": "github:cypress-io/node-webkit-updater#e74623726f381487f543e373e71515177a32daeb",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:cypress-io/node-webkit-updater.git#e74623726f381487f543e373e71515177a32daeb",
      "sshUrl": "git+ssh://git@github.com/cypress-io/node-webkit-updater.git#e74623726f381487f543e373e71515177a32daeb",
      "httpsUrl": "git+https://github.com/cypress-io/node-webkit-updater.git#e74623726f381487f543e373e71515177a32daeb",
      "gitUrl": "git://github.com/cypress-io/node-webkit-updater.git#e74623726f381487f543e373e71515177a32daeb",
      "shortcut": "github:cypress-io/node-webkit-updater#e74623726f381487f543e373e71515177a32daeb",
      "directUrl": "https://raw.githubusercontent.com/cypress-io/node-webkit-updater/e74623726f381487f543e373e71515177a32daeb/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/cypress-io/node-webkit-updater.git#e74623726f381487f543e373e71515177a32daeb",
  "_shasum": "208872b3a15d9eed8e5cee9cb6579b091df9c49d",
  "_shrinkwrap": null,
  "_spec": "node-webkit-updater@github:cypress-io/node-webkit-updater#e74623726f381487f543e373e71515177a32daeb",
  "_where": "/usr/local/var/buildkite-agent/builds/1973.local-1/cypress-io/cypress/dist/darwin/packages/server",
  "author": {
    "name": "Eldar Djafarov",
    "email": "djkojb@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/edjafarov/node-webkit-updater/issues"
  },
  "contributors": [
    {
      "name": "Eldar Djafarov",
      "email": "djkojb@gmail.com"
    },
    {
      "name": "Adam Lynch",
      "email": "contact@adamlynch.com"
    }
  ],
  "dependencies": {
    "del": "~0.1.2",
    "ncp": "2.0.0",
    "request": "~2.64.0",
    "semver": "^5.0.3",
    "tar.gz": "^0.1.1"
  },
  "description": "node-webkit autoupdate library",
  "devDependencies": {
    "chai": "^1.9.1",
    "express": "^4.3.1",
    "get-port": "^0.1.0",
    "grunt": "~0.4.5",
    "grunt-cli": "~0.1.13",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-contrib-compress": "^0.9.1",
    "grunt-contrib-copy": "^0.5.0",
    "grunt-jsdoc-to-markdown": "~0.4.1",
    "grunt-mocha-test": "^0.10.2",
    "grunt-node-webkit-builder": "~0.2.2",
    "mocha": "^1.19.0"
  },
  "gitHead": "e74623726f381487f543e373e71515177a32daeb",
  "homepage": "https://github.com/edjafarov/node-webkit-updater",
  "keywords": [
    "node-webkit",
    "update",
    "autoupdate"
  ],
  "main": "./app/updater.js",
  "name": "node-webkit-updater",
  "optionalDependencies": {},
  "readme": "node-webkit-updater [![NPM version][npm-image]][npm-url]\r\n=======\r\nThis is [node-webkit](https://github.com/rogerwang/node-webkit)-updater.\r\n\r\n```\r\nnpm install node-webkit-updater\r\n```\r\n\r\nIt gives you low-level API to:\r\n\r\n1. Check the manifest for version (from your running \"old\" app).\r\n2. If the version is different from the running one, download new package to a temp directory.\r\n3. Unpack the package in temp.\r\n4. Run new app from temp and kill the old one (i.e. still all from the running app).\r\n5. The new app (in temp) will copy itself to the original folder, overwriting the old app.\r\n6. The new app will run itself from original folder and exit the process.\r\n\r\nYou should build this logic by yourself though. As a reference you can use [example](app/index.html).\r\n\r\nCovered by tests and works for [linux](http://screencast.com/t/Je2ptbHhP), [windows](http://screencast.com/t/MSTKqVS3) and [mac](http://screencast.com/t/OXyC5xoA).\r\n\r\n## Examples\r\n\r\n- [Basic](examples/basic.js)\r\n\r\n\r\n## API\r\n\r\n<a name=\"new_updater\"></a>\n####new updater(manifest, options)\nCreates new instance of updater. Manifest could be a `package.json` of project.\n\nNote that compressed apps are assumed to be downloaded in the format produced by [node-webkit-builder](https://github.com/mllrsohn/node-webkit-builder) (or [grunt-node-webkit-builder](https://github.com/mllrsohn/grunt-node-webkit-builder)).\n\n**Params**\n\n- manifest `object` - See the [manifest schema](#manifest-schema) below.  \n- options `object` - Optional  \n\n<a name=\"updater#checkNewVersion\"></a>\n####updater.checkNewVersion(cb)\nWill check the latest available version of the application by requesting the manifest specified in `manifestUrl`.\n\nThe callback will always be called; the second parameter indicates whether or not there's a newer version.\nThis function assumes you use [Semantic Versioning](http://semver.org) and enforces it; if your local version is `0.2.0` and the remote one is `0.1.23456` then the callback will be called with `false` as the second paramter. If on the off chance you don't use semantic versioning, you could manually download the remote manifest and call `download` if you're happy that the remote version is newer.\n\n**Params**\n\n- cb `function` - Callback arguments: error, newerVersionExists (`Boolean`), remoteManifest  \n\n<a name=\"updater#download\"></a>\n####updater.download(cb, newManifest)\nDownloads the new app to a template folder\n\n**Params**\n\n- cb `function` - called when download completes. Callback arguments: error, downloaded filepath  \n- newManifest `Object` - see [manifest schema](#manifest-schema) below  \n\n**Returns**: `Request` - Request - stream, the stream contains `manifest` property with new manifest and 'content-length' property with the size of package.  \n<a name=\"updater#getAppPath\"></a>\n####updater.getAppPath()\nReturns executed application path\n\n**Returns**: `string`  \n<a name=\"updater#getAppExec\"></a>\n####updater.getAppExec()\nReturns current application executable\n\n**Returns**: `string`  \n<a name=\"updater#unpack\"></a>\n####updater.unpack(filename, cb, manifest)\nWill unpack the `filename` in temporary folder.\nFor Windows, [unzip](https://www.mkssoftware.com/docs/man1/unzip.1.asp) is used (which is [not signed](https://github.com/edjafarov/node-webkit-updater/issues/68)).\n\n**Params**\n\n- filename `string`  \n- cb `function` - Callback arguments: error, unpacked directory  \n- manifest `object`  \n\n<a name=\"updater#runInstaller\"></a>\n####updater.runInstaller(appPath, args, options)\nRuns installer\n\n**Params**\n\n- appPath `string`  \n- args `array` - Arguments which will be passed when running the new app  \n- options `object` - Optional  \n\n**Returns**: `function`  \n<a name=\"updater#install\"></a>\n####updater.install(copyPath, cb)\nInstalls the app (copies current application to `copyPath`)\n\n**Params**\n\n- copyPath `string`  \n- cb `function` - Callback arguments: error  \n\n<a name=\"updater#run\"></a>\n####updater.run(execPath, args, options)\nRuns the app from original app executable path.\n\n**Params**\n\n- execPath `string`  \n- args `array` - Arguments passed to the app being ran.  \n- options `object` - Optional. See `spawn` from nodejs docs.\n\nNote: if this doesn't work, try `gui.Shell.openItem(execPath)` (see [node-webkit Shell](https://github.com/rogerwang/node-webkit/wiki/Shell)).  \n\n\r\n---\r\n\r\n## Manifest Schema\r\n\r\nAn example manifest:\r\n\r\n```json\r\n{\r\n    \"name\": \"updapp\",\r\n    \"version\": \"0.0.2\",\r\n    \"author\": \"Eldar Djafarov <djkojb@gmail.com>\",\r\n    \"manifestUrl\": \"http://localhost:3000/package.json\",\r\n    \"packages\": {\r\n        \"mac\": {\r\n           \"url\": \"http://localhost:3000/releases/updapp/mac/updapp.zip\"\r\n        },\r\n        \"win\": {\r\n           \"url\": \"http://localhost:3000/releases/updapp/win/updapp.zip\"\r\n        },\r\n        \"linux32\": {\r\n           \"url\": \"http://localhost:3000/releases/updapp/linux32/updapp.tar.gz\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe manifest could be a `package.json` of project, but doesn't have to be.\r\n\r\n### manifest.name\r\n\r\nThe name of your app. From time, it is assumed your Mac app is called `<manifest.name>.app`, your Windows executable is `<manifest.name>.exe`, etc.\r\n\r\n### manifest.version\r\n[semver](http://semver.org) version of your app.\r\n\r\n### manifest.manifestUrl\r\nThe URL where your latest manifest is hosted; where node-webkit-updater looks to check if there is a newer version of your app available.\r\n\r\n### manifest.packages\r\nAn \"object\" containing an object for each OS your app (at least this version of your app) supports; `mac`, `win`, `linux32`, `linux64`.\r\n\r\n### manifest.packages.{mac, win, linux32, linux64}.url\r\nEach package has to contain a `url` property pointing to where the app (for the version & OS in question) can be downloaded.\r\n\r\n### manifest.packages.{mac, win, linux32, linux64}.execPath (Optional)\r\nIt's assumed your app is stored at the root of your package, use this to override that and specify a path (relative to the root of your package).\r\n\r\nThis can also be used to override `manifest.name`; e.g. if your `manifest.name` is `helloWorld` (therefore `helloWorld.app` on Mac) but your Windows executable is named `nw.exe`. Then you'd set `execPath` to `nw.exe`\r\n\r\n---\r\n\r\n## Troubleshooting\r\n\r\n### Mac\r\nIf you get an error on Mac about too many files being open, run `ulimit -n 10240`\r\n\r\n### Windows\r\nOn Windows, there is no \"unzip\" command built in by default. As a result, this project uses a third party \"unzip.exe\" in order to extract the downloaded update. On the NWJS site, in the \"How to package and distribute your apps\" file, one of the recommended methods of distribution is using EnigmaVirtualBox to package the app, nw.exe, and required DLLs into a single EXE file. This method works great for distribution, but unfortunately breaks node-webkit-updater, because it wraps the required unzip.exe file inside of the created EnigmaVirtualBox EXE. As a result, *it is not possible to use EnigmaVirtualBox to distribute your app if you plan on using node-webkit-updater*. Try using InnoSetup instead.\r\n\r\n## Contributing\r\n\r\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\r\n\r\n[npm-url]: https://npmjs.org/package/node-webkit-updater\r\n[npm-image]: https://badge.fury.io/js/node-webkit-updater.png\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/edjafarov/node-webkit-updater.git"
  },
  "scripts": {
    "deps": "npm i && cd app && npm i && cd ..",
    "test": "node node_modules/grunt-cli/bin/grunt clean mochaTest"
  },
  "version": "0.3.2"
}
